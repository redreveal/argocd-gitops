name: Manual Sync Configuration

on:
  workflow_dispatch:
    inputs:
      target_branch:
        description: 'Target branch to sync configurations to'
        required: true
        default: 'main'

jobs:
  sync-configurations:
    runs-on: ubuntu-latest
    steps:
      - name: Setup SSH Key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.ARGOCD_GITOPS_VERSIONS_DEPLOYMENT_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan github.com >> ~/.ssh/known_hosts

      - name: Checkout source repository (current repo)
        uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Ensure we fetch all history for diffs

      - name: Checkout target repository using SSH
        uses: actions/checkout@v2
        with:
          repository: 'redreveal/argocd-gitops-versions'
          ssh-key: ${{ secrets.ARGOCD_GITOPS_VERSIONS_DEPLOYMENT_KEY }}
          path: target-repo
          ref: ${{ github.event.inputs.target_branch }}

      - name: Detect and Process Configuration Changes
        run: |
          mkdir changes
          find versions -name 'processing-agent-config.yml' | while read src_file; do
            src_path="$GITHUB_WORKSPACE/$src_file"
            trg_path="${src_path/versions/processing-agent-config.yml/versions/values.yaml}"
            echo "Processing source: $src_path"
            echo "Targeting: $trg_path"
            
            mkdir -p $(dirname "$trg_path")
            if [ ! -f "$trg_path" ]; then
              echo "Target file $trg_path does not exist, creating a placeholder."
              touch "$trg_path"  # Create an empty file
            fi
            
            python3 ./.github/actions/scripts/process_values_to_cm.py "$src_path" "$trg_path"
            if [ $? -eq 0 ]; then
              echo "$src_file has changes and needs to be updated."
              cp "$src_path" "$trg_path"
              echo "$src_file" >> changes/list.txt
            fi
          done




#      - name: Commit and Push Changes to Target Repository
#        if: ${{ steps.detect_and_process_configuration_changes.outputs.changes_detected == 'true' }}
#        run: |
#          cd target-repo
#          git config user.email "sync-bot@example.com"
#          git config user.name "Sync Bot"
#          git add versions/
#          if [ -f ../changes/list.txt ]; then
#            git commit -m "Updated configurations based on changes in source repo"
#            git push
#          else
#            echo "No changes to commit."
#          fi
#        working_directory: ${{ github.workspace }}
