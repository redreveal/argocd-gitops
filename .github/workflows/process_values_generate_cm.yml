name: Process Values and Generate ConfigMap

on:
  push:
    paths:
      - 'versions/**/processing-agent-config.yml'

jobs:
  generate-configmap:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
      - name: Install Dependencies
        run: sudo apt-get install -y jq

      - name: Find Modified Config Files
        id: modified_files
        run: |
          if [[ "${{ github.event.before }}" == "0000000000000000000000000000000000000000" ]]; then
            # This likely means it's the first push in a newly-created repository, so we list all config files
            FILES=$(find versions/ -name 'processing-agent-config.yml')
          else
            # Use git diff to find changed files in commits
            FILES=$(git diff --name-only ${{ github.event.before }} ${{ github.sha }} -- 'versions/**/processing-agent-config.yml' || true)
          fi
          # Format the output for later steps
          FILES_JSON=$(jq -n --arg files "$FILES" '{"files":$files | split("\n")}')
          echo "::set-output name=files::$FILES_JSON"

      - name: Process Each Modified Config File
        run: |
          FILES=$(echo '${{ steps.modified_files.outputs.files }}' | jq -r '.files[]')
          for FILE in $FILES; do
            if [[ -n "$FILE" ]]; then
              python3 ./scripts/process_values_to_cm.py "$FILE"
            fi
          done
        env:
          FILES: ${{ steps.modified_files.outputs.files }}

      - name: Commit ConfigMaps to processing-agent-automation Repository
        run: |
          REPO='https://github.com/redreveal/argocd-gitops-versions.git'
          CHANGED_FILES=$(git diff --name-only ${{ github.sha }}^ ${{ github.sha }} | grep 'versions/.*/processing-agent-config.yml')
          for FILE in $CHANGED_FILES; do
            REGION_DIR=$(dirname $FILE)
            CONFIGMAP_FILE=$(basename $FILE)
            TEMP_DIR=$(mktemp -d)
            git clone ${REPO} ${TEMP_DIR}
            mkdir -p ${TEMP_DIR}/${REGION_DIR}
            cp $FILE ${TEMP_DIR}/${REGION_DIR}/
            
            cd ${TEMP_DIR}
            git add ${REGION_DIR}/${CONFIGMAP_FILE}
            git commit -m "Update ConfigMap for ${REGION_DIR}"
            git push
          done
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
